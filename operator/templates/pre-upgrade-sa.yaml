---
# Source: testkube/templates/pre-upgrade-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
# Source: testkube/templates/pre-upgrade-sa.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
  - apiGroups: ["apps"]
    resources: ["deployments", "deployments/scale"]
    verbs: ["create","delete","get","list","patch","update","watch"]
---
# Source: testkube/templates/pre-upgrade-sa.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "mongodb-upgrade"
  labels:
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: testkube
    app.kubernetes.io/name: mongodb-upgrade
  annotations:
    "helm.sh/hook": pre-upgrade,post-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "mongodb-upgrade"
subjects:
  - kind: ServiceAccount
    name: "mongodb-upgrade"
